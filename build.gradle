import com.github.spotbugs.snom.SpotBugsTask

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'jacoco'
    id 'com.github.spotbugs' version '6.0.25'
}

ext {
    versions = [:]
    versions.spring = System.getenv("SPRING") == '5' ? '5.3.39' : '6.1.14'
    versions.springApi = System.getenv("SPRING") == '5' ? '5.3.0' : '6.1.0'
    versions.target = System.getenv("SPRING") == '5' ? 8 : 17
    versions.junit = '5.11.3'
}

version = "${majorVersion}.${minorVersion}.${patchVersion}"

// dependencies

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    api "org.springframework:spring-context:${versions.springApi}"
    implementation "org.springframework:spring-context:${versions.spring}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
            "org.springframework:spring-test:${versions.spring}",
            'org.hamcrest:hamcrest:2.2',
            'org.mockito:mockito-junit-jupiter:5.14.2'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${versions.junit}"
}

// compiling

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.toVersion(versions.target)
    withJavadocJar()
    withSourcesJar()
}

tasks.withType(JavaCompile) {
    configure(options) {
        encoding = 'UTF-8'
        deprecation = true
        compilerArgs << "-Xlint:unchecked"
    }
}

// unit tests

test {
    useJUnitPlatform()
}

// publishing

javadoc {
    options {
        memberLevel = JavadocMemberLevel.PROTECTED
        source = '1.8'
        author = false
        header "${project.description} ${project.version}"
        links 'https://docs.oracle.com/javase/8/docs/api/', "https://docs.spring.io/spring-framework/docs/${versions.spring}/javadoc-api/"
        encoding 'UTF-8'
        addStringOption('Xdoclint:none', '-quiet')
    }
}

tasks.withType(Jar) {
    from(project.projectDir) {
        include 'LICENSE'
        into('META-INF')
    }
    manifest {
        attributes(
                "Automatic-Module-Name": "diergo.spring.legacy",
                "Specification-Title": project.description,
                "Specification-Version": "${majorVersion}.${minorVersion}",
                "Specification-Vendor": vendor,
                "Implementation-Title": project.description,
                "Implementation-Version": "${majorVersion}.${minorVersion}.${patchVersion}",
                "Implementation-Vendor": vendor,
                "Implementation-Vendor-Id": project.group
        )
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                description = project.description
                developers {
                    developer {
                        name = 'Arne Burmeister'
                        email = 'arne@burmeister-teltow.de'
                    }
                }
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                scm {
                    connection = "scm:git:https://github.com/${project.group}/${project.name}.git"
                    developerConnection = "scm:git:ssh:git@github.com:${project.group}/${project.name}.git"
                    url = "https://github.com/${project.group}/${project.name}"
                }
            }
        }
    }
}

// code analysis

tasks.withType(SpotBugsTask) {
    reports {
        xml.required = false
        html.required = true
    }
}

spotbugs {
    test {
        exclude("example")
    }
}

jacocoTestReport {
    reports {
        html.required = true
    }
}

jacocoTestCoverageVerification {
    dependsOn jacocoTestReport
    violationRules {
        rule {
            limit {
                counter = 'CLASS'
                minimum = 0.9
            }
            limit {
                counter = 'LINE'
                minimum = 0.8
            }
            limit {
                counter = 'BRANCH'
                minimum = 0.7
            }
        }
    }
}

// task dependencies

check.dependsOn jacocoTestCoverageVerification, jacocoTestReport
assemble.dependsOn javadoc

wrapper {
    gradleVersion = '7.6'
}
