plugins {
    id 'java-library'
    id 'maven-publish'
    id 'jacoco'
    id 'com.github.spotbugs' version '5.0.13'
}

ext {
    versions = [:]
    versions.spring = System.getenv("SPRING") == '5' ? '5.3.24' : '6.0.3'
    versions.junit = '5.9.1'
}

version = "${majorVersion}.${minorVersion}.${patchVersion}"

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    api "org.springframework:spring-context:5.1.0.RELEASE"
    implementation "org.springframework:spring-context:${versions.spring}"
    compileOnly "com.github.spotbugs:spotbugs-annotations:4.7.3"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
            "org.springframework:spring-test:${versions.spring}",
            'org.hamcrest:hamcrest:2.2',
            'org.mockito:mockito-junit-jupiter:4.10.0'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${versions.junit}"
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        html.required = true
    }
}

jacocoTestCoverageVerification {
    dependsOn jacocoTestReport
    violationRules {
        rule {
            limit {
                counter = 'CLASS'
                minimum = 0.9
            }
            limit {
                counter = 'LINE'
                minimum = 0.8
            }
            limit {
                counter = 'BRANCH'
                minimum = 0.7
            }
        }
    }
}

tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
    reports {
        xml.required = false
        html.required = true
    }
}

javadoc {
    options.memberLevel = 'PACKAGE'
    options.author = false
    options.source = '1.8'
    options.header = "${project.description} ${project.version}"
    options.links(["https://docs.oracle.com/javase/8/docs/api/",
                   "https://docs.spring.io/spring-framework/docs/${versions.spring}/javadoc-api/"] as String[])
    options.encoding = 'UTF-8'
    options.addStringOption('Xdoclint:none', '-quiet')
}

tasks.withType(Jar) {
    from(project.projectDir) {
        include 'LICENSE'
        into('META-INF')
    }
    manifest {
        attributes(
                "Automatic-Module-Name": "${project.group}.${project.name}",
                "Specification-Title": project.description,
                "Specification-Version": "${majorVersion}.${minorVersion}",
                "Specification-Vendor": vendor,
                "Implementation-Title": project.description,
                "Implementation-Version": "${majorVersion}.${minorVersion}.${patchVersion}",
                "Implementation-Vendor": vendor,
                "Implementation-Vendor-Id": project.group
        )
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                description = project.description
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }
    }
}

task release(group: 'Publishing', description: 'Build the testes artifacts for a release.') {
    doFirst {
        project.version = "${majorVersion}.${minorVersion}.${patchVersion}"
    }
    finalizedBy build
}

wrapper {
    gradleVersion = '6.8.3'
}

check.dependsOn jacocoTestCoverageVerification, jacocoTestReport
assemble.dependsOn javadoc
